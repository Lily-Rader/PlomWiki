PlomWiki: @plomlompom tries to build his own wiki, optimized for his own needs.
As @plomlompom is rather inexperienced, he starts with some not-too-good PHP.

INSTALLATION

Copy PlomWiki/ and everything below onto your server. Access your wiki via URL
"http://[YourDomain/YourPath]/plomwiki.php". Default admin password: "Password".

USE

You can view each page's current text by clicking on the "View" link below its
title and, if you know the password, edit it by clicking on "Edit". Click on
"History" to can examine previous changes to the page text and, via "Revert"
links, return the page text to its state before each such change (here, too,
only if you know the password).

Per default, only little markup is possible on pages, though more could be added
as plugins (see Technical Details section). For examples of usable markups, see
the markup cheatcodes below the page text editing window.

To create a new page, either in your address bar enter the new pagename preceded
by "http://[YourDomain/YourPath]/plomwiki.php?title=", or write a link to the
new pagename into an existing page's text via the PlomWiki linking markup (like
this: "[[NewPagename]]") and click on it. Notice PlomWiki pagenames are case-
sensitive and may only contain a-z, A-Z, 0-9 and hyphens ("-").

To delete a page, reduce page text to "delete". Empty page text won't be posted.

TECHNICAL DETAILS

Wiki pages are stored as text files of their current version in PlomWiki/pages/
with the pagename as the filename. In PlomWiki/pages/diffs/, diffs to previous
versions are stored. Page deletion does not actually remove the files but just
renames, timestamps and moves page files into PlomWiki/pages/deleted/.

The "action=" GET parameter in page URLs determines the user action. Values like
"view" and "edit" correspond to functions like Action_view() and Action_edit()
in plomwiki.php by prepending the value with "Action_" and calling either a
function found with that name or defaulting to "Action_view". This should give
you an idea on how to add new actions by adding functions like "Action_xyz()".

Plugins are implemented as code added by plomwiki.php to its run by examining
PlomWiki/config/plugins and requiring the contents of all files referenced
therein as relative paths (and not commented out with a "#"). Feel free to add
not only functions, but also to extend global variables, especially those acting
as hooks in the flow of certain important functions which eval() them as code.

Wiki page markup is achieved by running the original page text through page text
manipulation functions named and put into order in PlomWiki/config/markups.
PlomWiki's standard markup is built from functions defined in the plugin 
StandardMarkup.php.

Writing to PlomWiki's database starts with user input into Action_write(), which
generates a list of appropriate DB manipulation tasks and writes them into a
todo file in PlomWiki/work. Tasks in this file are worked through independently
from the user process that triggered them via WorkTodo(). Tasks written into the
todo file work/todo_urgent are worked through and have to be finished before any
other wiki action can be performed.

Other todo files could be named and separate WorkTodo() calls on them defined as
new user actions; such details of Action_write()'s behavior depend on the "t="
GET parameter delivered to it. The function "PrepareWrite_$t()", if found, is
called to fill Action_write() with all it needs to know.

As single bottleneck for DB writing, Action_write() also is the point where all
password checks are called. It delivers POST "password=" and GET "t=" parameters
to CheckPW() and waits for its OK. CheckPW() reads from config/password a list
of keys (could be the names of pages, users, whatever) mapped to password
hashes; looks up (plugin-extendable) $permissions if the user-provided key is
allowed to open targets of type "t=" (i.e. a password for page editing should
not be usable for editing users); and if so, compares the hash of "password="
with the appropriate one in the password file. CheckPW() will also delay for 10
seconds after a failed authentication attempt any further one from the same IP.

For more details on PlomWiki's inner workings, read the source code's comments.
